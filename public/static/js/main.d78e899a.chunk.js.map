{"version":3,"sources":["actions/actionTypes.js","config.js","actions/addDetail.js","actions/supplierAction.js","components/ProductComponent.js","components/AutoSelect.js","components/SnackbarComponent.js","components/Supplier.js","components/WelcomeComponent.js","components/SupplierList.js","components/App.js","reducers/supplierReducer.js","store.js","reducers/productReducer.js","index.js"],"names":["ADD_DETAIL","DELETE_PRODUCT","GET_PRODUCT","ADD_INLINE_PRODUCT","CLEAR_INLINE_PRODUCT","CHECK_INLINE_PRODUCT","SUBMIT_SUPPLIER_DATA","CLOSE_SNACKBAR","GET_SUPPLIER","FORM_SUBMITTED","SET_VALUE","BASE_URL","setProductValue","valueToSetInRedux","dispatch","type","payload","getProduct","supplierId","axios","post","then","res","data","product","response","catch","err","setValue","getListOfSupplier","get","suppliers","ValueTypography","withStyles","paper","padding","Dialog","root","color","Typography","ProductComponent","state","editClicked","productId","productName","itemQty","uom","packSize","packUom","unitPrice","totalPrice","addProduct","addProductRequiredFields","requiredFields","showError","handleChange","addNew","e","elem","target","propName","_this","name","_objectSpread2","anotherUnit","elemValue","Number","value","toFixed","setState","Object","defineProperty","objectSpread","popupHide","_this$props","props","clearInlineProduct","clearForm","saveData","eve","preventDefault","_this$setState5","_this$props2","addData","filter","toString","trim","length","setTimeout","_this$setState6","renderRow","rowData","_id","_this$state$product","react_default","a","createElement","TableRow","TableCell","index","TextField","margin","onChange","bind","assertThisInitialized","error","indexOf","Select","MenuItem","disabled","style","display","flexDirection","IconButton","onClick","Done","Clear","data-productid","currentTarget","getAttribute","checkInlineProduct","Create","_this$props3","deleteProduct","Delete","parseDate","dateString","addZero","string","date","Date","getDate","getMonth","getFullYear","renderSupplier","gridMargin","classes","_this$props4","map","transactionId","_suppliers$index","transactionDate","importCountry","billOfEntry","billOfEntryDate","countryOfOrigin","supplierInvoice","poReference","Paper","marginTop","Grid","container","xs","item","md","className","variant","Divider","light","componentDidMount","_this$props5","location","currentSupplier","_this2","this","textAlign","dist_default","title","columns","field","actions","icon","tooltip","options","search","paging","actionsColumnIndex","components","Row","Toolbar","Button","float","assign","addInlineProduct","Component","mapDispatchToProps","productData","isEdit","getState","console","log","url","supplier","bodyData","withCredentials","withRouter","connect","showPopupState","showPopup","beingEdited","theme","height","width","backgroundColor","lightBlue","btn","marginRight","useStyles","makeStyles","flexGrow","zIndex","input","valueContainer","flexWrap","flex","alignItems","overflow","chip","spacing","chipFocused","emphasize","palette","grey","noOptionsMessage","singleValue","fontSize","position","left","placeholder","right","divider","menu","inputComponent","_ref","inputRef","objectWithoutProperties","ref","Control","children","innerProps","innerRef","_props$selectProps","selectProps","TextFieldProps","InputProps","inputProps","Menu","square","MultiValue","Chip","tabIndex","label","clsx","isFocused","onDelete","removeProps","deleteIcon","Cancel_default","NoOptionsMessage","Option","selected","component","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","suggestion","useTheme","selectStyles","base","text","primary","& input","font","NoSsr","react_select_browser_esm","styles","inputId","onBlur","inputVal","countryArr","val","match","forEach","element","updateSelectValue","isClearable","selectValue","success","red","SnackbarComponent","Snackbar","anchorOrigin","vertical","horizontal","open","formSubmitSuccess","SnackbarContent","message","action","key","aria-label","closeSnackBar","Close_default","StyledGrid","marginBottom","StyledTypography","textTransform","Supplier","supplierField","dateError","errorFields","handleSelectValue","selectOption","handleTextField","handleFormSubmit","stateVal","getDay","keys","reduce","submitSupplierData","editMode","handleDateChange","supplierIndex","supplierToBeEdited","componentWillUnmount","changeRoute","reRoute","history","push","_this$state$supplierF","onSubmit","form","material_ui_pickers_esm","utils","DateFnsUtils","autoOk","textField","lowZIndex","inputVariant","format","shouldDisableDate","components_AutoSelect","id","direction","buttons","Link","to","React","supplierData","closeBarState","bar","outerContainer","justifyContent","elemZIndex","boxSizing","outline","border","formControl","minWidth","WelcomeComponent","Container","maxWidth","textContainer","typography","primaryBtn","top","SupplierList","handleEditClick","loopSupplier","isDivider","Fragment","ListItem","ListItemText","pathname","data-transactionid","Launch_default","Create_default","deleteSupplier","Delete_default","sm","List","App","react_router_dom","react_router","exact","path","productComponent","suggestions","rootReducer","combineReducers","initialState","arguments","undefined","prevProduct","concat","toConsumableArray","splice","obj","__v","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d78e899a.chunk.js","sourcesContent":["export const ADD_DETAIL = \"ADD_DETAIL\";\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\nexport const GET_PRODUCT = \"GET_PRODUCT\";\r\nexport const ADD_INLINE_PRODUCT = \"ADD_INLINE_PRODUCT\";\r\nexport const CLEAR_INLINE_PRODUCT = \"CLEAR_INLINE_PRODUCT\";\r\nexport const CHECK_INLINE_PRODUCT = \"CHECK_INLINE_PRODUCT\";\r\n// supplier action\r\nexport const SUBMIT_SUPPLIER_DATA = \"SUBMIT_SUPPLIER_DATA\";\r\nexport const CLOSE_SNACKBAR = \"CLOSE_SNACKBAR\";\r\nexport const GET_SUPPLIER = \"GET_SUPPLIER\";\r\nexport const FORM_SUBMITTED = \"FORM_SUBMITTED\";\r\nexport const SET_VALUE = \"SET_VALUE\";\r\n","export const BASE_URL = \"https://projectsupplier.herokuapp.com/\";\r\n// export const BASE_URL = \"https://localhost:5000\";","import {\r\n  GET_PRODUCT,\r\n  SET_VALUE,\r\n  ADD_INLINE_PRODUCT,\r\n  CLEAR_INLINE_PRODUCT,\r\n  CHECK_INLINE_PRODUCT\r\n} from \"./actionTypes\";\r\nimport { BASE_URL } from \"../config.js\";\r\nimport axios from \"axios\";\r\n// remove question\r\nexport function addData(productData, isEdit) {\r\n  return (dispatch, getState) => {\r\n    console.log(isEdit);\r\n    let url = BASE_URL + \"/product/\";\r\n    url += isEdit ? \"edit\" : \"add\";\r\n    axios\r\n      .post(url, {\r\n        product: productData.data\r\n      })\r\n      .then(function(res) {\r\n        if (res.data.type === \"SUCCESSFUL\") {\r\n          getProduct(getState().supplier.currentSupplier)(dispatch);\r\n\r\n          setProductValue({ editClicked: false })(dispatch);\r\n        } else {\r\n        }\r\n      });\r\n  };\r\n}\r\n// clear notification\r\nexport function setProductValue(valueToSetInRedux) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_VALUE,\r\n      payload: valueToSetInRedux\r\n    });\r\n  };\r\n}\r\n\r\nexport function deleteProduct(bodyData) {\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .post(BASE_URL+\"/product/delete\", bodyData, {\r\n        withCredentials: true\r\n      })\r\n      .then(function(response) {\r\n        console.log(response);\r\n        if (response.data.type === \"SUCCESSFUL\") {\r\n          getProduct(getState().supplier.currentSupplier)(dispatch);\r\n        } else {\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function addInlineProduct() {\r\n  return dispatch => dispatch({ type: ADD_INLINE_PRODUCT });\r\n}\r\nexport function clearInlineProduct() {\r\n  return dispatch => dispatch({ type: CLEAR_INLINE_PRODUCT });\r\n}\r\nexport function checkInlineProduct() {\r\n  return dispatch => dispatch({ type: CHECK_INLINE_PRODUCT });\r\n}\r\n\r\nexport function getProduct(supplierId) {\r\n  return dispatch => {\r\n    axios\r\n      .post(BASE_URL+\"/product/get\", {\r\n        supplierId\r\n      })\r\n      .then(res => {\r\n        if (res.data.type === \"SUCCESSFUL\") {\r\n          dispatch({\r\n            type: GET_PRODUCT,\r\n            payload: { product: res.data.response }\r\n          });\r\n        } else {\r\n        }\r\n      })\r\n      .catch(function(err) {});\r\n  };\r\n}\r\n","import {\r\n  CLOSE_SNACKBAR,\r\n  GET_SUPPLIER,\r\n  FORM_SUBMITTED,\r\n  SET_VALUE\r\n} from \"./actionTypes\";\r\nimport { BASE_URL } from \"../config.js\";\r\nimport axios from \"axios\";\r\n// clear notification\r\nexport function submitSupplierData(supplierData, isEdit) {\r\n  return dispatch => {\r\n    let url = BASE_URL + \"/supplier/\";\r\n    url += isEdit ? \"edit\" : \"add\";\r\n    console.log(url);\r\n    axios\r\n      .post(url, {\r\n        supplier: supplierData\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n\r\n        if (res.data.type === \"SUCCESSFUL\") {\r\n          dispatch({\r\n            type: FORM_SUBMITTED,\r\n            payload: {\r\n              formSubmitSuccess: true,\r\n              reRoute: true\r\n            }\r\n          });\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\n// clear notification\r\nexport function setValue(valueToSetInRedux) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_VALUE,\r\n      payload: valueToSetInRedux\r\n    });\r\n  };\r\n}\r\n// clear notification\r\nexport function getListOfSupplier() {\r\n  return dispatch => {\r\n    axios\r\n      .get(BASE_URL+\"/supplier/get\")\r\n      .then(res => {\r\n        if (res.data.type === \"SUCCESSFUL\") {\r\n          dispatch({\r\n            type: GET_SUPPLIER,\r\n            payload: { suppliers: res.data.response }\r\n          });\r\n        } else {\r\n        }\r\n      })\r\n      .catch(function(err) {});\r\n  };\r\n}\r\n\r\n// clear notification\r\nexport function closeSnackBar(closeBarState, bar) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: CLOSE_SNACKBAR,\r\n      payload: {\r\n        formSubmitSuccess: closeBarState\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\n// clear notification\r\nexport function deleteSupplier(supplierId) {\r\n  return dispatch => {\r\n    axios\r\n      .post(BASE_URL+\"/supplier/delete\", { supplierId })\r\n      .then(res => {\r\n        if (res.data.type === \"SUCCESSFUL\") {\r\n          console.log(res);\r\n          getListOfSupplier()(dispatch);\r\n        } else {\r\n          console.log(res);\r\n        }\r\n      })\r\n      .catch(function(err) {});\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addData,\r\n  getProduct,\r\n  addInlineProduct\r\n} from \"../actions/addDetail\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\r\nimport { Create, Delete, Done, Clear } from \"@material-ui/icons\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MaterialTable from \"material-table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { setValue } from \"../actions/supplierAction\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {\r\n  setProductValue,\r\n  deleteProduct,\r\n  clearInlineProduct,\r\n  checkInlineProduct\r\n} from \"../actions/addDetail\";\r\nconst styles = theme => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    backgroundColor: lightBlue[300],\r\n    textAlign: \"center\",\r\n    padding: 0\r\n  },\r\n  btn: {\r\n    marginRight: 10\r\n  },\r\n  gridMargin: {\r\n    marginTop: 10\r\n  }\r\n});\r\nconst StyledDialog = withStyles({\r\n  paper: {\r\n    padding: 10\r\n  }\r\n})(Dialog);\r\nconst ValueTypography = withStyles({\r\n  root: {\r\n    color: \"#bdbdbd\"\r\n  }\r\n})(Typography);\r\nclass ProductComponent extends Component {\r\n  state = {\r\n    editClicked: false,\r\n    productId: \"\",\r\n    product: {\r\n      productName: \"\",\r\n      itemQty: 0,\r\n      uom: \"KG\",\r\n      packSize: \"\",\r\n      packUom: \"KG\",\r\n      unitPrice: 0,\r\n      totalPrice: 0\r\n    },\r\n    addProduct: {\r\n      productName: \"\",\r\n      itemQty: \"\",\r\n      uom: \"KG\",\r\n      packSize: \"\",\r\n      packUom: \"KG\",\r\n      unitPrice: \"\",\r\n      totalPrice: \"\"\r\n    },\r\n    addProductRequiredFields: [],\r\n    requiredFields: [],\r\n    showError: false\r\n  };\r\n  handleChange = (addNew, e) => {\r\n    let elem = e.target,\r\n      propName = addNew ? \"addProduct\" : \"product\";\r\n    // simple condition if the addProduct is for inline\r\n    propName =\r\n      this.state.productId === \"ADD_INLINE_PRODUCT\" ? \"product\" : \"product\";\r\n    // If the element input being changed\r\n    // is itemqty or unitprice then change the total price\r\n    if (elem.name === \"itemQty\" || elem.name === \"unitPrice\") {\r\n      let anotherUnit = elem.name === \"itemQty\" ? \"unitPrice\" : \"itemQty\";\r\n      let elemValue =\r\n        elem.name === \"unitPrice\"||\"itemQty\" ? Number(elem.value).toFixed(2) : elem.value;\r\n      this.setState({\r\n        [propName]: {\r\n          ...this.state[propName],\r\n          [elem.name]: elemValue,\r\n          totalPrice: (elem.value * this.state[propName][anotherUnit]).toFixed(\r\n            2\r\n          )\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [propName]: {\r\n          ...this.state[propName],\r\n          [e.target.name]: e.target.value\r\n        }\r\n      });\r\n    }\r\n  };\r\n  // showpoup\r\n  popupHide = addNew => {\r\n    let propName = \"product\",\r\n      { setProductValue, clearInlineProduct } = this.props;\r\n\r\n    setProductValue({ editClicked: false });\r\n    addNew && clearInlineProduct();\r\n    this.setState({\r\n      [propName]: {\r\n        productName: \"\",\r\n        itemQty: 0,\r\n        uom: \"KG\",\r\n        packSize: \"\",\r\n        packUom: \"KG\",\r\n        unitPrice: 0,\r\n        totalPrice: 0\r\n      }\r\n    });\r\n  };\r\n  clearForm = propName => {\r\n    this.setState({\r\n      [propName]: {\r\n        productName: \"\",\r\n        itemQty: 0,\r\n        uom: \"KG\",\r\n        packSize: \"\",\r\n        packUom: \"KG\",\r\n        unitPrice: 0,\r\n        totalPrice: 0\r\n      }\r\n    });\r\n  };\r\n  // save data into the redux store\r\n  saveData = (addNew, eve) => {\r\n    eve.preventDefault();\r\n    let propName = \"product\",\r\n      data = this.state[propName],\r\n      { addData, supplierId } = this.props,\r\n      requiredFields = [\r\n        \"productName\",\r\n        \"itemQty\",\r\n        \"uom\",\r\n        \"packSize\",\r\n        \"packUom\",\r\n        \"unitPrice\",\r\n        \"totalPrice\"\r\n      ];\r\n    requiredFields = requiredFields.filter(elem => {\r\n      if (\r\n        elem === \"unitPrice\" ||\r\n        elem === \"packSize\" ||\r\n        elem === \"totalPrice\"\r\n      ) {\r\n        if (!Number(data[elem])) {\r\n          return true;\r\n        } else if (Number(data[elem]) <= 0) {\r\n          return true;\r\n        } else if (data[elem].toString().trim() === \"\") {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return !data[elem];\r\n      }\r\n    });\r\n    if (requiredFields.length) {\r\n      this.setState({\r\n        [propName]: { ...this.state[propName] },\r\n        [\"requiredFields\"]: requiredFields\r\n      });\r\n      // clearing the required fields\r\n      setTimeout(() => {\r\n        this.setState({\r\n          [propName]: {\r\n            ...this.state[propName]\r\n          },\r\n          [\"requiredFields\"]: []\r\n        });\r\n      }, 500);\r\n    } else {\r\n      addData(\r\n        {\r\n          data: {\r\n            ...this.state[propName],\r\n            supplierId: supplierId\r\n          }\r\n        },\r\n        this.state.productId === \"ADD_INLINE_PRODUCT\" ? false : true\r\n      );\r\n      this.clearForm(propName);\r\n    }\r\n  };\r\n  //================== RENDER ROW ==============//\r\n  // renderDialog = () => {\r\n  //   const {\r\n  //       productName,\r\n  //       itemQty,\r\n  //       uom,\r\n  //       packSize,\r\n  //       packUom,\r\n  //       unitPrice,\r\n  //       totalPrice\r\n  //     } = this.state.addProduct,\r\n  //     classes = this.props.classes,\r\n  //     boundedHandleChange = this.handleChange.bind(this, true),\r\n  //     { addProductRequiredFields } = this.state;\r\n  //   return (\r\n  //     <StyledDialog\r\n  //       fullWidth={true}\r\n  //       maxWidth=\"sm\"\r\n  //       open={this.props.showPopupState}\r\n  //     >\r\n  //       <form onSubmit={this.saveData.bind(this, true)}>\r\n  //         <Grid container>\r\n  //           <Grid item xs={12} md={6}>\r\n  //             <Typography variant=\"subtitle2\">Item name</Typography>\r\n  //             <TextField\r\n  //               margin=\"dense\"\r\n  //               variant=\"outlined\"\r\n  //               name=\"productName\"\r\n  //               type=\"text\"\r\n  //               onChange={boundedHandleChange}\r\n  //               value={productName}\r\n  //               error={\r\n  //                 addProductRequiredFields.indexOf(\"productName\") === -1\r\n  //                   ? false\r\n  //                   : true\r\n  //               }\r\n  //             />\r\n  //           </Grid>\r\n  //           <Grid item xs={12} sm={6}>\r\n  //             <Typography variant=\"subtitle2\">Quantity</Typography>\r\n  //             <TextField\r\n  //               margin=\"dense\"\r\n  //               variant=\"outlined\"\r\n  //               name=\"itemQty\"\r\n  //               type=\"number\"\r\n  //               onChange={boundedHandleChange}\r\n  //               value={itemQty}\r\n  //               error={\r\n  //                 addProductRequiredFields.indexOf(\"itemQty\") === -1\r\n  //                   ? false\r\n  //                   : true\r\n  //               }\r\n  //             />\r\n  //           </Grid>\r\n  //           <Grid item xs={12} md={6}>\r\n  //             <Typography variant=\"subtitle2\">UOM</Typography>\r\n  //             <FormControl variant=\"outlined\">\r\n  //               <Select\r\n  //                 value={uom}\r\n  //                 onChange={boundedHandleChange}\r\n  //                 input={<OutlinedInput name=\"uom\" />}\r\n  //                 error={\r\n  //                   addProductRequiredFields.indexOf(\"uom\") === -1\r\n  //                     ? false\r\n  //                     : true\r\n  //                 }\r\n  //               >\r\n  //                 <MenuItem value=\"KG\">Kg</MenuItem>\r\n  //                 <MenuItem value=\"LTR\">Ltr</MenuItem>\r\n  //                 <MenuItem value=\"LBS\">lbs</MenuItem>\r\n  //               </Select>\r\n  //             </FormControl>\r\n  //           </Grid>\r\n  //           <Grid item xs={12} md={6}>\r\n  //             <Typography variant=\"subtitle2\">pack size</Typography>\r\n  //             <TextField\r\n  //               margin=\"dense\"\r\n  //               variant=\"outlined\"\r\n  //               name=\"packSize\"\r\n  //               type=\"number\"\r\n  //               onChange={boundedHandleChange}\r\n  //               value={packSize}\r\n  //               error={\r\n  //                 addProductRequiredFields.indexOf(\"packSize\") === -1\r\n  //                   ? false\r\n  //                   : true\r\n  //               }\r\n  //             />\r\n  //           </Grid>\r\n  //           <Grid item xs={12} md={6}>\r\n  //             <Typography variant=\"subtitle2\">Pack UOM</Typography>\r\n  //             <FormControl variant=\"outlined\">\r\n  //               <Select\r\n  //                 value={packUom}\r\n  //                 onChange={boundedHandleChange}\r\n  //                 input={<OutlinedInput name=\"packUom\" />}\r\n  //                 error={\r\n  //                   addProductRequiredFields.indexOf(\"packUom\") === -1\r\n  //                     ? false\r\n  //                     : true\r\n  //                 }\r\n  //               >\r\n  //                 <MenuItem value=\"KG\">Kg</MenuItem>\r\n  //                 <MenuItem value=\"LTR\">Ltr</MenuItem>\r\n  //                 <MenuItem value=\"LBS\">lbs</MenuItem>\r\n  //               </Select>\r\n  //             </FormControl>\r\n  //           </Grid>\r\n  //           <Grid item xs={12} md={6}>\r\n  //             <Typography variant=\"subtitle2\">unit price</Typography>\r\n  //             <TextField\r\n  //               margin=\"dense\"\r\n  //               variant=\"outlined\"\r\n  //               name=\"unitPrice\"\r\n  //               type=\"number\"\r\n  //               onChange={boundedHandleChange}\r\n  //               value={\r\n  //                 (unitPrice + \"\").indexOf(\".\") !== -1\r\n  //                   ? unitPrice\r\n  //                   : unitPrice + \".00\"\r\n  //               }\r\n  //               error={\r\n  //                 addProductRequiredFields.indexOf(\"unitPrice\") === -1\r\n  //                   ? false\r\n  //                   : true\r\n  //               }\r\n  //             />\r\n  //           </Grid>\r\n  //           <Grid item xs={12} md={6}>\r\n  //             <Typography variant=\"subtitle2\">total price</Typography>\r\n  //             <TextField\r\n  //               margin=\"dense\"\r\n  //               variant=\"outlined\"\r\n  //               name=\"totalPrice\"\r\n  //               type=\"number\"\r\n  //               onChange={boundedHandleChange}\r\n  //               // disabled\r\n  //               value={\r\n  //                 (itemQty * unitPrice + \"\").indexOf(\".\") === -1\r\n  //                   ? itemQty * unitPrice + \".00\"\r\n  //                   : itemQty * unitPrice\r\n  //               }\r\n  //               error={\r\n  //                 addProductRequiredFields.indexOf(\"totalPrice\") === -1\r\n  //                   ? false\r\n  //                   : true\r\n  //               }\r\n  //             />\r\n  //           </Grid>\r\n  //           <Grid item xs={12} className={classes.gridMargin}>\r\n  //             <Button\r\n  //               type=\"submit\"\r\n  //               // onClick={this.saveData.bind(this, true)}\r\n  //               variant=\"contained\"\r\n  //               color=\"primary\"\r\n  //               className={classes.btn}\r\n  //             >\r\n  //               save\r\n  //             </Button>\r\n  //             <Button\r\n  //               onClick={this.popupHide.bind(this, true)}\r\n  //               className={classes.btn}\r\n  //             >\r\n  //               cancel\r\n  //             </Button>\r\n  //           </Grid>\r\n  //         </Grid>\r\n  //       </form>\r\n  //     </StyledDialog>\r\n  //   );\r\n  // };\r\n  renderRow = rowData => {\r\n    var data = rowData.data;\r\n    if (this.props.editClicked === true && data._id === this.state.productId) {\r\n      const {\r\n        productName,\r\n        itemQty,\r\n        uom,\r\n        packSize,\r\n        packUom,\r\n        unitPrice,\r\n        totalPrice\r\n      } = this.state.product;\r\n      let requiredFields = this.state.requiredFields;\r\n      return (\r\n        <TableRow>\r\n          <TableCell>{rowData.index + 1}</TableCell>\r\n          <TableCell>\r\n            <TextField\r\n              margin=\"dense\"\r\n              value={productName}\r\n              name=\"productName\"\r\n              onChange={this.handleChange.bind(this, false)}\r\n              error={\r\n                requiredFields.indexOf(\"productName\") === -1 ? false : true\r\n              }\r\n            />\r\n          </TableCell>\r\n          <TableCell>\r\n            <TextField\r\n              margin=\"dense\"\r\n              value={itemQty}\r\n              name=\"itemQty\"\r\n              type=\"number\"\r\n              onChange={this.handleChange.bind(this, false)}\r\n              error={requiredFields.indexOf(\"itemQty\") === -1 ? false : true}\r\n            />\r\n          </TableCell>\r\n          <TableCell>\r\n            <Select\r\n              value={uom}\r\n              name=\"uom\"\r\n              onChange={this.handleChange.bind(this, false)}\r\n              error={requiredFields.indexOf(\"uom\") === -1 ? false : true}\r\n            >\r\n              <MenuItem value=\"KG\">Kg</MenuItem>\r\n              <MenuItem value=\"LTR\">Ltr</MenuItem>\r\n              <MenuItem value=\"LBS\">lbs</MenuItem>\r\n            </Select>\r\n          </TableCell>\r\n          <TableCell>\r\n            <TextField\r\n              margin=\"dense\"\r\n              value={packSize}\r\n              name=\"packSize\"\r\n              type=\"number\"\r\n              onChange={this.handleChange.bind(this, false)}\r\n              error={requiredFields.indexOf(\"packSize\") === -1 ? false : true}\r\n            />\r\n          </TableCell>\r\n          <TableCell>\r\n            <Select\r\n              name=\"packUom\"\r\n              value={packUom}\r\n              onChange={this.handleChange.bind(this, false)}\r\n              error={requiredFields.indexOf(\"packUom\") === -1 ? false : true}\r\n            >\r\n              <MenuItem value=\"KG\">Kg</MenuItem>\r\n              <MenuItem value=\"LTR\">Ltr</MenuItem>\r\n              <MenuItem value=\"LBS\">lbs</MenuItem>\r\n            </Select>\r\n          </TableCell>\r\n          <TableCell>\r\n            <TextField\r\n              margin=\"dense\"\r\n              value={\r\n                (unitPrice + \"\").indexOf(\".\") !== -1\r\n                  ? unitPrice\r\n                  : unitPrice + \".00\"\r\n              }\r\n              name=\"unitPrice\"\r\n              type=\"number\"\r\n              onChange={this.handleChange.bind(this, false)}\r\n              error={requiredFields.indexOf(\"unitPrice\") === -1 ? false : true}\r\n            />\r\n          </TableCell>\r\n          <TableCell>\r\n            <TextField\r\n              margin=\"dense\"\r\n              value={\r\n                (itemQty * unitPrice + \"\").indexOf(\".\") === -1\r\n                  ? itemQty * unitPrice + \".00\"\r\n                  : itemQty * unitPrice\r\n              }\r\n              name=\"totalPrice\"\r\n              type=\"number\"\r\n              disabled\r\n              onChange={this.handleChange.bind(this, false)}\r\n              error={requiredFields.indexOf(\"totalPrice\") === -1 ? false : true}\r\n            />\r\n          </TableCell>\r\n          <TableCell\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\"\r\n            }}\r\n          >\r\n            <IconButton\r\n              onClick={this.saveData.bind(\r\n                this,\r\n                data._id === \"ADD_INLINE_PRODUCT\" ? true : false\r\n              )}\r\n            >\r\n              <Done />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={this.popupHide.bind(\r\n                this,\r\n                data._id === \"ADD_INLINE_PRODUCT\" ? true : false\r\n              )}\r\n            >\r\n              <Clear />\r\n            </IconButton>\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    } else {\r\n      return (\r\n        <TableRow>\r\n          <TableCell>{rowData.index + 1}</TableCell>\r\n          <TableCell>{data.productName}</TableCell>\r\n          <TableCell>{data.itemQty}</TableCell>\r\n          <TableCell>{data.uom}</TableCell>\r\n          <TableCell>{data.packSize}</TableCell>\r\n          <TableCell>{data.packUom}</TableCell>\r\n          <TableCell>\r\n            {(data.unitPrice + \"\").indexOf(\".\") !== -1\r\n              ? data.unitPrice\r\n              : data.unitPrice + \".00\"}\r\n          </TableCell>\r\n          <TableCell>\r\n            {(data.totalPrice + \"\").indexOf(\".\") !== -1\r\n              ? data.totalPrice\r\n              : data.totalPrice + \".00\"}\r\n          </TableCell>\r\n          <TableCell\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\"\r\n            }}\r\n          >\r\n            <IconButton\r\n              data-productid={data._id}\r\n              onClick={eve => {\r\n                let productId = eve.currentTarget.getAttribute(\r\n                  \"data-productid\"\r\n                );\r\n                this.props.checkInlineProduct();\r\n                this.props.setProductValue({ editClicked: true });\r\n                this.setState({\r\n                  productId: productId,\r\n                  product: data\r\n                });\r\n              }}\r\n            >\r\n              <Create />\r\n            </IconButton>\r\n            <IconButton\r\n              data-productid={data._id}\r\n              onClick={eve => {\r\n                let { supplierId, deleteProduct } = this.props;\r\n                let productId = eve.currentTarget.getAttribute(\r\n                  \"data-productid\"\r\n                );\r\n                deleteProduct({\r\n                  supplierId,\r\n                  productId\r\n                });\r\n              }}\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n  };\r\n  parseDate = dateString => {\r\n    function addZero(string) {\r\n      if (string.length === 1) {\r\n        return \"0\" + string;\r\n      } else {\r\n        return string;\r\n      }\r\n    }\r\n    let date = new Date(dateString);\r\n\r\n    if (typeof date === \"string\" && date.indexOf(\"invalid\") !== -1) {\r\n      return \"-\";\r\n    } else {\r\n      return (\r\n        addZero(date.getDate().toString()) +\r\n        \"/\" +\r\n        addZero(date.getMonth().toString()) +\r\n        \"/\" +\r\n        date.getFullYear()\r\n      );\r\n    }\r\n  };\r\n  renderSupplier = () => {\r\n    const gridMargin = this.props.classes.gridMargin,\r\n      { supplierId, suppliers } = this.props,\r\n      index = suppliers.map(e => e.transactionId).indexOf(supplierId);\r\n    if (!suppliers.length) {\r\n      return;\r\n    }\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n    let {\r\n      transactionId,\r\n      transactionDate,\r\n      importCountry,\r\n      billOfEntry,\r\n      billOfEntryDate,\r\n      countryOfOrigin,\r\n      supplierInvoice,\r\n      poReference\r\n    } = suppliers[index];\r\n    return (\r\n      <Paper style={{ marginTop: 10 }}>\r\n        <Grid container xs={12}>\r\n          <Grid item xs={12} md={4} className={gridMargin}>\r\n            <Typography variant=\"subtitle1\">Transaction id #</Typography>\r\n            <ValueTypography variant=\"body2\">\r\n              {transactionId || \"-\"}\r\n            </ValueTypography>\r\n            <Divider light />\r\n          </Grid>\r\n          <Grid item xs={12} md={4} className={gridMargin}>\r\n            <Typography variant=\"subtitle1\">Transaction date</Typography>\r\n            <ValueTypography variant=\"body2\">\r\n              {(transactionDate && this.parseDate(transactionDate)) || \"-\"}\r\n            </ValueTypography>\r\n            <Divider light />\r\n          </Grid>\r\n          <Grid item xs={12} md={4} className={gridMargin}>\r\n            <Typography variant=\"subtitle1\">Importing countries</Typography>\r\n            <ValueTypography variant=\"body2\">\r\n              {importCountry ? importCountry.value : \"-\"}\r\n            </ValueTypography>\r\n            <Divider light />\r\n          </Grid>\r\n          <Grid item xs={12} md={4} className={gridMargin}>\r\n            <Typography variant=\"subtitle1\">Country of origin</Typography>\r\n            <ValueTypography variant=\"body2\">\r\n              {countryOfOrigin ? countryOfOrigin.value : \"-\"}\r\n            </ValueTypography>\r\n            <Divider light />\r\n          </Grid>\r\n          <Grid item xs={12} md={4} className={gridMargin}>\r\n            <Typography variant=\"subtitle1\">Supplier invoice</Typography>\r\n            <ValueTypography variant=\"bo2y1\">\r\n              {supplierInvoice || \"-\"}\r\n            </ValueTypography>\r\n            <Divider light />\r\n          </Grid>\r\n          <Grid item xs={12} md={4} className={gridMargin}>\r\n            <Typography variant=\"subtitle1\">Bill of entry date</Typography>\r\n            <ValueTypography variant=\"body2\">\r\n              {(billOfEntryDate && this.parseDate(billOfEntryDate)) || \"-\"}\r\n            </ValueTypography>\r\n            <Divider light />\r\n          </Grid>\r\n          <Grid item xs={12} md={4} className={gridMargin}>\r\n            <Typography variant=\"subtitle1\">Po reference</Typography>\r\n            <ValueTypography variant=\"body2\">\r\n              {poReference || \"-\"}\r\n            </ValueTypography>\r\n            <Divider light />\r\n          </Grid>\r\n          <Grid item xs={12} md={4} className={gridMargin}>\r\n            <Typography variant=\"subtitle1\">Bill of entry</Typography>\r\n            <ValueTypography variant=\"body2\">\r\n              {billOfEntry || \"-\"}\r\n            </ValueTypography>\r\n            <Divider light />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  };\r\n  componentDidMount = () => {\r\n    const { location, getProduct, setValue } = this.props;\r\n    setValue({\r\n      currentSupplier: location.state.currentSupplier\r\n    });\r\n    getProduct(location.state.currentSupplier);\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid\r\n        container\r\n        xs={12}\r\n        md={10}\r\n        style={{ margin: \"auto\", textAlign: \"center\" }}\r\n      >\r\n        {/* {this.renderDialog()} */}\r\n        <Grid item xs={12}>\r\n          {this.renderSupplier()}\r\n        </Grid>\r\n        <Grid item xs={12} style={{ marginTop: \"10px\" }}>\r\n          <MaterialTable\r\n            title=\"Supplier products\"\r\n            columns={[\r\n              { title: \"S.NO\", field: \"sno\" },\r\n              { title: \"Item\", field: \"productName\" },\r\n              { title: \"Quantity\", field: \"itemQty\" },\r\n              { title: \"UOM\", field: \"uom\" },\r\n              { title: \"Pack Size\", field: \"packSize\" },\r\n              { title: \"Pack UOM\", field: \"packUom\" },\r\n              { title: \"Unit price\", field: \"unitPrice\" },\r\n              {\r\n                title: \"Total Price\",\r\n                field: \"totalPrice\"\r\n              }\r\n            ]}\r\n            data={this.props.product}\r\n            actions={[\r\n              {\r\n                icon: Create,\r\n                tooltip: \"edit product\"\r\n              },\r\n              {\r\n                icon: Delete,\r\n                tooltip: \"edit product\"\r\n              }\r\n            ]}\r\n            options={{\r\n              search: false,\r\n              paging: false,\r\n              actionsColumnIndex: -1\r\n            }}\r\n            components={{\r\n              Row: this.renderRow,\r\n              Toolbar: () => {\r\n                return (\r\n                  <Grid container xs={12}>\r\n                    <Grid xs={6}>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        style={{ textAlign: \"left\", margin: 10 }}\r\n                      >\r\n                        Supplier product\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid xs={6}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{\r\n                          float: \"right\",\r\n                          margin: 10\r\n                        }}\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            product: Object.assign({}, this.state.product),\r\n                            productId: \"ADD_INLINE_PRODUCT\"\r\n                          });\r\n                          this.props.addInlineProduct();\r\n                          this.props.setProductValue({\r\n                            editClicked: true\r\n                          });\r\n                        }}\r\n                      >\r\n                        Add new\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                );\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  showPopupState: state.product.showPopup,\r\n  beingEdited: state.product.beingEdited,\r\n  productId: state.product.productId,\r\n  product: state.product.product,\r\n  suppliers: state.supplier.suppliers,\r\n  supplierId: state.supplier.currentSupplier,\r\n  editClicked: state.product.editClicked\r\n});\r\nconst mapDispatchToProps = {\r\n  addData,\r\n  getProduct,\r\n  setValue,\r\n  setProductValue,\r\n  deleteProduct,\r\n  addInlineProduct,\r\n  clearInlineProduct,\r\n  checkInlineProduct\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withStyles(styles)(ProductComponent))\r\n);\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Select from \"react-select\";\r\nimport { emphasize, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NoSsr from \"@material-ui/core/NoSsr\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport PropTypes from \"prop-types\";\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    zIndex: 99999\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"60px\",zIndex: 0,\r\n    width: \"269px\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\",\r\n    zIndex: 99999\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n    position: \"relative\",\r\n    left: \"10px\"\r\n  },\r\n  placeholder: {\r\n    position: \"relative\",\r\n    left: \"10px\",\r\n    fontSize: 16,\r\n    zIndex: 0\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n    width: \"269px\"\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  menu: {\r\n    width: \"100%\",\r\n    zIndex: 99999\r\n  }\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps }\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps\r\n        }\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      className={props.selectProps.classes.menu}\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography\r\n      className={props.selectProps.classes.singleValue}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer\r\n};\r\n\r\nfunction AutoSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // update the select value\r\n  function handleChangeSingle(value) {\r\n    props.updateSelectValue({ name: props.name, value: value });\r\n  }\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      \"& input\": {\r\n        font: \"inherit\"\r\n      }\r\n    })\r\n  };\r\n  const handleBlurCountryChange = e => {\r\n    let target = e.target,\r\n      inputVal = target.value;\r\n    let countryArr = props.suggestion[props.name].map(function(val) {\r\n        return val.label;\r\n      }),\r\n      match = false;\r\n    countryArr.forEach(element => {\r\n      if (element.indexOf(inputVal) !== -1) {\r\n        match = true;\r\n      }\r\n    });\r\n    if (!match) {\r\n      props.updateSelectValue({ name: props.name, value: null });\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          TextFieldProps={{\r\n            placeholder: \"select your country\"\r\n          }}\r\n          onBlur={handleBlurCountryChange}\r\n          isClearable={true}\r\n          name={props.name}\r\n          options={props.suggestion[props.name]}\r\n          components={components}\r\n          value={props.selectValue}\r\n          onChange={handleChangeSingle}\r\n        />\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    suggestion: state.supplier.suggestion\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AutoSelect);\r\n","import React from \"react\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles({\r\n  success: {\r\n    backgroundColor: \"#43a047\"\r\n  },\r\n  error: { backgroundColor: red[500] }\r\n});\r\nexport default function SnackbarComponent(props) {\r\n  const classes = useStyles(props);\r\n  const { className, variant } = props;\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\"\r\n      }}\r\n      open={props.formSubmitSuccess}\r\n    >\r\n      <SnackbarContent\r\n        message=\"Supplier successfuly added\"\r\n        className={clsx(classes[variant], className)}\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            onClick={() => {\r\n              props.closeSnackBar(false);\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </Snackbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport AutoSelect from \"./AutoSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../css/supplier.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\r\nimport SnackbarComponent from \"./SnackbarComponent\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  submitSupplierData,\r\n  closeSnackBar,\r\n  setValue\r\n} from \"../actions/supplierAction\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nconst styles = theme => {\r\n  return {\r\n    outerContainer: {\r\n      backgroundColor: lightBlue[300],\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    },\r\n    item: {\r\n      marginTop: 10\r\n    },\r\n    form: {\r\n      width: \"80%\",\r\n      margin: \"auto\"\r\n    },\r\n    elemZIndex: {\r\n      zIndex: 1\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n      margin: \"10px auto\",\r\n      boxSizing: \"border-box\",\r\n      padding: \"20px\",\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\"\r\n    },\r\n    buttons: {\r\n      margin: \"10px 10px 0px 0px\"\r\n    },\r\n    outline: {\r\n      border: \"1px solid red\"\r\n    },\r\n    formControl: {\r\n      margin: \"10px\",\r\n      minWidth: 120\r\n    },\r\n    textField: {\r\n      margin: 0,\r\n      width: \"269px\"\r\n    },\r\n    lowZIndex: {\r\n      zIndex: 0\r\n    }\r\n  };\r\n};\r\n\r\nconst StyledGrid = withStyles({\r\n  root: {\r\n    marginBottom: 10\r\n  }\r\n})(Grid);\r\n\r\nconst StyledTypography = withStyles({\r\n  root: {\r\n    margin: 0,\r\n    marginBottom: 10\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\"\r\n  }\r\n})(Typography);\r\nclass Supplier extends React.Component {\r\n  state = {\r\n    supplierField: {\r\n      importCountry: null,\r\n      countryOfOrigin: null,\r\n      transactionId: null,\r\n      transactionDate: null,\r\n      billOfEntry: \"\",\r\n      billOfEntryDate: null,\r\n      supplierInvoice: \"\",\r\n      poReference: \"\"\r\n    },\r\n    dateError: {},\r\n    errorFields: [],\r\n    formSubmitSuccess: false\r\n  };\r\n  handleSelectValue = selectOption => {\r\n    this.setState({\r\n      supplierField: {\r\n        ...this.state.supplierField,\r\n        [selectOption.name]: selectOption.value\r\n      }\r\n    });\r\n  };\r\n  // handle TextField value\r\n  handleTextField = eve => {\r\n    this.setState({\r\n      supplierField: {\r\n        ...this.state.supplierField,\r\n        [eve.target.name]: eve.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  // handle on submit event\r\n  handleFormSubmit = eve => {\r\n    eve.preventDefault();\r\n    let stateVal = this.state.supplierField;\r\n    let requiredFields = [\"poReference\", \"transactionDate\", \"billOfEntryDate\"];\r\n    requiredFields = requiredFields.filter(elem => {\r\n      let dayToDisable = [6];\r\n      if (elem === \"transactionDate\" || elem === \"billOfEntryDate\") {\r\n        let date = stateVal[elem] && new Date(stateVal[elem]);\r\n        if (!date) return true;\r\n        if (dayToDisable.indexOf(date.getDay()) !== -1) return true;\r\n        if (date.toString().indexOf(\"Invalid\") !== -1 || !stateVal[elem]) {\r\n          return true;\r\n        }\r\n      } else {\r\n        if (!stateVal[elem]) {\r\n          return true;\r\n        } else if (!stateVal[elem].toString().trim()) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    this.setState({ errorFields: requiredFields });\r\n    // setTimeout\r\n    setTimeout(() => {\r\n      this.setState({ errorFields: [] });\r\n    }, 500);\r\n    let dateError = Object.keys(this.state.dateError).reduce(\r\n      e => this.state.dateError[e]\r\n    ,\"\");\r\n    if (!requiredFields.length && !dateError.length) {\r\n      this.props.submitSupplierData(stateVal, this.props.editMode);\r\n    } else {\r\n    }\r\n  };\r\n  handleDateChange = (e, name) => {\r\n    let stateVal = this.state;\r\n    this.setState({\r\n      supplierField: {\r\n        ...this.state.supplierField,\r\n        [name]: e\r\n      }\r\n    });\r\n    if (!e) {\r\n      this.setState({ dateError: { ...stateVal.dateError, [name]: true } });\r\n      return;\r\n    } else {\r\n      if (e.toString().indexOf(\"Invalid\") === -1) {\r\n        this.setState({ dateError: { ...stateVal.dateError, [name]: false } });\r\n      } else {\r\n        this.setState({ dateError: { ...stateVal.dateError, [name]: true } });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    let { editMode, supplierToBeEdited, suppliers } = this.props,\r\n      supplierIndex,\r\n      transactionIds;\r\n    if (editMode) {\r\n      transactionIds = suppliers.map(elem => elem.transactionId);\r\n      supplierIndex = transactionIds.indexOf(supplierToBeEdited);\r\n      this.setState({\r\n        supplierField: Object.assign(\r\n          {},\r\n          this.state.supplierField,\r\n          suppliers[supplierIndex]\r\n        )\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.props.setValue({ editMode: false, supplierToBeEdited: \"\" });\r\n  };\r\n  changeRoute = () => {\r\n    const { reRoute, history, setValue } = this.props;\r\n    if (reRoute) {\r\n      setTimeout(() => {\r\n        history.push(\"/supplierlist\");\r\n        setValue({ formSubmitSuccess: false, reRoute: false });\r\n      }, 2000);\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      transactionId,\r\n      transactionDate,\r\n      billOfEntryDate,\r\n      billOfEntry,\r\n      supplierInvoice,\r\n      poReference\r\n    } = this.state.supplierField;\r\n    const { classes } = this.props;\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit} className={classes.form}>\r\n        {this.changeRoute()}\r\n        <Paper className={classes.root}>\r\n          <Grid container>\r\n            <StyledGrid item xs={12} md={6}>\r\n              <StyledTypography variant=\"body1\">\r\n                Transaction id #\r\n              </StyledTypography>\r\n              <span>{transactionId}</span>\r\n            </StyledGrid>\r\n            <StyledGrid item xs={12} md={6}>\r\n              <StyledTypography variant=\"body1\">\r\n                Transaction date:\r\n              </StyledTypography>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  className={clsx(classes.textField, classes.lowZIndex)}\r\n                  variant=\"dialog\"\r\n                  inputVariant=\"outlined\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  shouldDisableDate={date => date.getDay() === 6}\r\n                  value={transactionDate}\r\n                  error={\r\n                    this.state.errorFields.indexOf(\"transactionDate\") !== -1 ||\r\n                    this.state.dateError.transactionDate\r\n                  }\r\n                  placeholder=\"select date\"\r\n                  onChange={date =>\r\n                    this.handleDateChange(date, \"transactionDate\")\r\n                  }\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </StyledGrid>\r\n            <StyledGrid item xs={12} md={6}>\r\n              <StyledTypography variant=\"body1\">\r\n                Importing countries\r\n              </StyledTypography>\r\n              <AutoSelect\r\n                name=\"importCountry\"\r\n                updateSelectValue={this.handleSelectValue}\r\n                selectValue={this.state.supplierField[\"importCountry\"]}\r\n              />\r\n            </StyledGrid>\r\n            <StyledGrid item xs={12} md={6}>\r\n              <StyledTypography variant=\"body1\">\r\n                Country of origin\r\n              </StyledTypography>\r\n              <AutoSelect\r\n                name=\"countryOfOrigin\"\r\n                updateSelectValue={this.handleSelectValue}\r\n                selectValue={this.state.supplierField[\"countryOfOrigin\"]}\r\n              />\r\n            </StyledGrid>\r\n\r\n            <StyledGrid item xs={12} md={6}>\r\n              <StyledTypography variant=\"body1\">\r\n                Supplier invoice\r\n              </StyledTypography>\r\n              <TextField\r\n                id=\"outlined-name\"\r\n                className={classes.textField}\r\n                type=\"number\"\r\n                name=\"supplierInvoice\"\r\n                value={supplierInvoice}\r\n                onChange={this.handleTextField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Supplier invoice\"\r\n              />\r\n            </StyledGrid>\r\n            <StyledGrid item xs={12} md={6}>\r\n              <StyledTypography variant=\"body1\">\r\n                Bill of entry date\r\n              </StyledTypography>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  variant=\"dialog\"\r\n                  inputVariant=\"outlined\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={billOfEntryDate}\r\n                  error={\r\n                    this.state.errorFields.indexOf(\"billOfEntryDate\") !== -1 ||\r\n                    this.state.dateError.billOfEntryDate\r\n                  }\r\n                  placeholder=\"select date\"\r\n                  className={clsx(classes.textField, classes.lowZIndex)}\r\n                  onChange={date =>\r\n                    this.handleDateChange(date, \"billOfEntryDate\")\r\n                  }\r\n                  shouldDisableDate={date => date.getDay() === 6}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </StyledGrid>\r\n            <StyledGrid item xs={12} md={6} direction=\"coloumn\">\r\n              <StyledTypography variant=\"body1\">po reference</StyledTypography>\r\n              <TextField\r\n                error={this.state.errorFields.indexOf(\"poReference\") !== -1}\r\n                name=\"poReference\"\r\n                // required\r\n                className={classes.textField}\r\n                value={poReference}\r\n                type=\"text\"\r\n                onChange={this.handleTextField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                placeholder=\"PO reference text\"\r\n              />\r\n            </StyledGrid>\r\n            <StyledGrid item xs={12} md={6}>\r\n              <StyledTypography variant=\"body1\">Bill of entry</StyledTypography>\r\n              <TextField\r\n                name=\"billOfEntry\"\r\n                type=\"text\"\r\n                value={billOfEntry}\r\n                className={classes.textField}\r\n                onChange={this.handleTextField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                placeholder=\"bill of entry text\"\r\n              />\r\n            </StyledGrid>\r\n            <StyledGrid container xs={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttons}\r\n                type=\"submit\"\r\n              >\r\n                {this.props.editMode ? \"Submit Edit\" : \"Submit\"}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.buttons}\r\n                component={Link}\r\n                to=\"/\"\r\n              >\r\n                {this.props.editMode ? \"Cancel Edit\" : \"Cancel\"}\r\n              </Button>\r\n            </StyledGrid>\r\n          </Grid>\r\n          <SnackbarComponent\r\n            formSubmitSuccess={this.props.formSubmitSuccess}\r\n            closeSnackBar={this.props.closeSnackBar}\r\n            variant=\"success\"\r\n          />\r\n        </Paper>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  formSubmitSuccess: state.supplier.formSubmitSuccess,\r\n  reRoute: state.supplier.reRoute,\r\n  editMode: state.supplier.editMode,\r\n  supplierToBeEdited: state.supplier.supplierToBeEdited,\r\n  suppliers: state.supplier.suppliers\r\n});\r\nconst mapDispatchToProps = {\r\n  submitSupplierData,\r\n  closeSnackBar,\r\n  setValue\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withStyles(styles)(Supplier))\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\r\nimport { Link } from \"react-router-dom\";\r\nconst styles = theme => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    backgroundColor: lightBlue[300],\r\n    textAlign: \"center\"\r\n  },\r\n  textContainer: { position: \"relative\", top: \"30%\", height: \"auto\" },\r\n  typography: {\r\n    color: \"#fff\"\r\n  },\r\n  primaryBtn: {\r\n    backgroundColor: \"#fff\",margin: \"10px\"\r\n  }\r\n});\r\nclass WelcomeComponent extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container className={classes.container} maxWidth=\"xl\">\r\n        <Container className={classes.textContainer}>\r\n          <Typography variant=\"h2\" className={classes.typography}>\r\n            Welcome to our app\r\n          </Typography>\r\n          <Button\r\n            component={Link}\r\n            to=\"/addsupplier\"\r\n            variant=\"contained\"\r\n            className={classes.primaryBtn}\r\n          >\r\n            Add Supplier\r\n          </Button>\r\n          <Button\r\n            component={Link}\r\n            to=\"/supplierlist\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            view Suppliers\r\n          </Button>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(WelcomeComponent);\r\n","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport Launch from \"@material-ui/icons/Launch\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getListOfSupplier,\r\n  setValue,\r\n  deleteSupplier\r\n} from \"../actions/supplierAction\";\r\nconst styles = theme => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    backgroundColor: lightBlue[300],\r\n    textAlign: \"center\",\r\n    padding: 0\r\n  }\r\n});\r\nclass SupplierList extends Component {\r\n  componentDidMount = () => {\r\n    this.props.getListOfSupplier();\r\n  };\r\n  handleEditClick = eve => {\r\n    let transactionId = eve.currentTarget.getAttribute(\"data-transactionid\"),\r\n      { history, setValue } = this.props;\r\n    setValue({ editMode: true, supplierToBeEdited: transactionId });\r\n    history.push(\"/editsupplier\");\r\n  };\r\n\r\n  // handleSupplierViewClick = eve => {\r\n  //   let transactionId = eve.currentTarget.getAttribute(\"data-transactionid\");\r\n  //   setValue({ currentSupplier: transactionId });\r\n  // };\r\n  loopSupplier = () => {\r\n    let { suppliers } = this.props,\r\n      isDivider = \"\";\r\n    if (!suppliers.length) {\r\n      return (\r\n        <ListItemText>\r\n          <Typography variant=\"h6\" style={{ textAlign: \"center\" }}>\r\n            No suppliers available\r\n          </Typography>\r\n        </ListItemText>\r\n      );\r\n    }\r\n    return suppliers.map((elem, index) => {\r\n      isDivider = \"\";\r\n      if (index + 1 !== suppliers.length) {\r\n        isDivider = <Divider light />;\r\n      }\r\n      return (\r\n        <React.Fragment>\r\n          <ListItem key={elem.transactionId}>\r\n            <ListItemText primary={elem.transactionId} />\r\n            <IconButton\r\n              component={Link}\r\n              to={{\r\n                pathname: \"/supplier\",\r\n                state: { currentSupplier: elem.transactionId }\r\n              }}\r\n              data-transactionid={elem.transactionId}\r\n            >\r\n              <Launch />\r\n            </IconButton>\r\n            <IconButton\r\n              data-transactionid={elem.transactionId}\r\n              onClick={this.handleEditClick}\r\n              label=\"Comments\"\r\n            >\r\n              <Create />\r\n            </IconButton>\r\n            <IconButton\r\n              data-transactionid={elem.transactionId}\r\n              aria-label=\"delete\"\r\n              onClick={this.props.deleteSupplier.bind(this, elem.transactionId)}\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </ListItem>\r\n          {isDivider}\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Grid container>\r\n        <Grid item xs={12} sm={8} md={6} style={{ margin: \"10px auto\" }}>\r\n          <Paper>\r\n            <List component=\"nav\" aria-label=\"Mailbox folders\">\r\n              <ListItemText>\r\n                <Typography variant=\"h6\" style={{ textAlign: \"center\" }}>\r\n                  SUPPLIERS TRANSACTION IDS\r\n                </Typography>\r\n              </ListItemText>\r\n              <Divider light />\r\n              {this.loopSupplier()}\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  suppliers: state.supplier.suppliers\r\n});\r\nconst mapDispatchToProps = { getListOfSupplier, setValue, deleteSupplier };\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withStyles(styles)(SupplierList))\r\n);\r\n","import React from \"react\";\r\nimport \"../css/App.css\";\r\nimport productComponent from \"./ProductComponent\";\r\nimport Supplier from \"./Supplier\";\r\nimport WelcomeComponent from \"./WelcomeComponent\";\r\nimport SupplierList from \"./SupplierList\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <Route exact path=\"/\" component={WelcomeComponent} />\r\n        <Route exact path=\"/addsupplier\" component={Supplier} />\r\n        <Route exact path=\"/editsupplier\" component={Supplier} />\r\n        <Route exact path=\"/supplier\" component={productComponent} />\r\n        <Route exact path=\"/supplierlist\" component={SupplierList} />\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default App;\r\n","import {\r\n  SUBMIT_SUPPLIER_DATA,\r\n  CLOSE_SNACKBAR,\r\n  FORM_SUBMITTED,\r\n  SET_VALUE,\r\n  GET_SUPPLIER\r\n} from \"../actions/actionTypes\";\r\n// import country suggestion\r\nconst suggestions = [\r\n  { label: \"Afghanistan\" },\r\n  { label: \"Aland Islands\" },\r\n  { label: \"Albania\" },\r\n  { label: \"Algeria\" },\r\n  { label: \"American Samoa\" },\r\n  { label: \"Andorra\" },\r\n  { label: \"Angola\" },\r\n  { label: \"Anguilla\" },\r\n  { label: \"Antarctica\" },\r\n  { label: \"Antigua and Barbuda\" },\r\n  { label: \"Argentina\" },\r\n  { label: \"Armenia\" },\r\n  { label: \"Aruba\" },\r\n  { label: \"Australia\" },\r\n  { label: \"Austria\" },\r\n  { label: \"Azerbaijan\" },\r\n  { label: \"Bahamas\" },\r\n  { label: \"Bahrain\" },\r\n  { label: \"Bangladesh\" },\r\n  { label: \"Barbados\" },\r\n  { label: \"Belarus\" },\r\n  { label: \"Belgium\" },\r\n  { label: \"Belize\" },\r\n  { label: \"Benin\" },\r\n  { label: \"Bermuda\" },\r\n  { label: \"Bhutan\" },\r\n  { label: \"Bolivia, Plurinational State of\" },\r\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\r\n  { label: \"Bosnia and Herzegovina\" },\r\n  { label: \"Botswana\" },\r\n  { label: \"Bouvet Island\" },\r\n  { label: \"Brazil\" },\r\n  { label: \"British Indian Ocean Territory\" },\r\n  { label: \"Brunei Darussalam\" }\r\n].map(suggestion => ({\r\n  value: suggestion.label,\r\n  label: suggestion.label\r\n}));\r\n\r\nexport function supplierReducer(\r\n  initialState = {\r\n    selectValue: { importCountry: null },\r\n    suggestion: {\r\n      importCountry: suggestions,\r\n      countryOfOrigin: suggestions\r\n    },\r\n    suppliers: [],\r\n    formSubmitSuccess: false,\r\n    reRoute: false,\r\n    editMode: false,\r\n    supplierToBeEdited: \"\",\r\n    currentSupplier: null\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case SUBMIT_SUPPLIER_DATA:\r\n      return Object.assign(\r\n        {},\r\n        initialState,\r\n        {\r\n          suppliers: [...initialState.suppliers, action.payload.supplier]\r\n        },\r\n        { formSubmitSuccess: true }\r\n      );\r\n    case CLOSE_SNACKBAR:\r\n      return Object.assign({}, initialState, action.payload);\r\n    case FORM_SUBMITTED:\r\n      return Object.assign({}, initialState, action.payload);\r\n    case SET_VALUE:\r\n      return Object.assign({}, initialState, action.payload);\r\n    case GET_SUPPLIER:\r\n      let suppliers = action.payload.suppliers;\r\n      suppliers = suppliers.map(elem => {\r\n        let obj = elem;\r\n        if (obj.importCountry) {\r\n          obj.importCountry = {\r\n            label: obj.importCountry,\r\n            value: obj.importCountry\r\n          };\r\n        }\r\n        if (obj.countryOfOrigin) {\r\n          obj.countryOfOrigin = {\r\n            label: obj.countryOfOrigin,\r\n            value: obj.countryOfOrigin\r\n          };\r\n        }\r\n\r\n        obj.transactionId = obj._id;\r\n        delete obj._id;\r\n        delete obj.__v;\r\n        return obj;\r\n      });\r\n      return Object.assign({}, initialState, { suppliers: suppliers });\r\n    default:\r\n      return initialState;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { productReducer } from \"./reducers/productReducer\";\r\nimport { supplierReducer } from \"./reducers/supplierReducer\";\r\nconst rootReducer = combineReducers({\r\n  product: productReducer,\r\n  supplier: supplierReducer\r\n});\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n","import {\r\n  ADD_DETAIL,\r\n  DELETE_PRODUCT,\r\n  GET_PRODUCT,\r\n  SET_VALUE,\r\n  ADD_INLINE_PRODUCT,\r\n  CLEAR_INLINE_PRODUCT,\r\n  CHECK_INLINE_PRODUCT\r\n} from \"../actions/actionTypes\";\r\nexport function productReducer(\r\n  initialState = {\r\n    product: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case ADD_DETAIL:\r\n      let product = initialState.product;\r\n      if (initialState.beingEdited === true) {\r\n        product[initialState.productId] = action.payload.product;\r\n      } else {\r\n        product.push(action.payload.product);\r\n      }\r\n      return Object.assign(\r\n        {},\r\n        initialState,\r\n        { product: product },\r\n        { beingEdited: false }\r\n      );\r\n    case SET_VALUE:\r\n      return Object.assign({}, initialState, action.payload);\r\n    case DELETE_PRODUCT:\r\n      let prevProduct = initialState.product,\r\n        id = action.payload.productId;\r\n      prevProduct = prevProduct.filter((val, index) => index !== +id);\r\n      return Object.assign({}, initialState, { product: prevProduct });\r\n    case GET_PRODUCT:\r\n      return Object.assign({}, initialState, action.payload);\r\n    case ADD_INLINE_PRODUCT:\r\n      if (\r\n        initialState.product[initialState.product.length - 1] &&\r\n        initialState.product[initialState.product.length - 1]._id ===\r\n          \"ADD_INLINE_PRODUCT\"\r\n      )\r\n        return initialState;\r\n      return Object.assign({}, initialState, {\r\n        product: [\r\n          ...initialState.product,\r\n          {\r\n            productName: \"\",\r\n            itemQty: 0,\r\n            uom: \"KG\",\r\n            packSize: \"\",\r\n            packUom: \"KG\",\r\n            unitPrice: 0,\r\n            totalPrice: 0,\r\n            _id: \"ADD_INLINE_PRODUCT\"\r\n          }\r\n        ]\r\n      });\r\n    case CLEAR_INLINE_PRODUCT:\r\n      return Object.assign({}, initialState, {\r\n        product: [...initialState.product].splice(\r\n          0,\r\n          initialState.product.length - 1\r\n        )\r\n      });\r\n    case CHECK_INLINE_PRODUCT:\r\n      if (\r\n        initialState.product[initialState.product.length - 1] &&\r\n        initialState.product[initialState.product.length - 1]._id ===\r\n          \"ADD_INLINE_PRODUCT\"\r\n      )\r\n        return Object.assign({}, initialState, {\r\n          product: [...initialState.product].splice(\r\n            0,\r\n            initialState.product.length - 1\r\n          )\r\n        });\r\n    default:\r\n      return initialState;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./components/App\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}